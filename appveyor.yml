###############################################################################
# Appveyor configuration file for LLVM
# -----------------------------------------------------------------------------
# This appveyor.yml is for the LLVM repository (Example: github.com/llvm-mirror/llvm)
# It builds LLVM, Clang, Clang tools extra, LLD.
#
# designed after https://gist.github.com/EricWF/28b1e46fdecee9bb0219d5aa55293041
###############################################################################

version: '{build}'

clone_depth: 16

build:
  verbosity: detailed

configuration:
  - Release
  
cache:
  - C:\projects\build-llvm

environment:
  matrix:
    ###########################################################################
    # Build x64 version using MSVC 2017
    ###########################################################################
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      MSVC_SETUP_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat
      MSVC_SETUP_ARG: x64

install:
  #############################################################################
  # Setup Ninja and CMake dependencies
  #############################################################################
  - mkdir C:\projects\deps
  - cd C:\projects\deps
  - cmake --version
  # Setup Ninja
  - set NINJA_URL=https://github.com/ninja-build/ninja/releases/download/v1.8.2/ninja-win.zip
  - appveyor DownloadFile %NINJA_URL% -FileName ninja.zip
  - set NINJA_DIR=C:\projects\deps\ninja
  - 7z x ninja.zip -o%NINJA_DIR% > nul
  - set PATH=%NINJA_DIR%;%PATH%
  - ninja --version

before_build:
  ############################################################################
  # Download extra sources and place them in the right place under LLVM
  # --------------------------------------------------------------------------
  # Replace the git repositories with the source versions you desire. It should
  # all still work the same.
  ############################################################################
  - set LLVM_ROOT=%APPVEYOR_BUILD_FOLDER%\..\root
  - set LLVM_GIT=http://llvm.org/git
  # TODO (sigiesec) Also cache external git repos, and fetch/pull instead of clone here if directories already exist?
  - git clone --depth=1 %LLVM_GIT%/llvm.git %LLVM_ROOT%\llvm -b release_70
  - git clone --depth=1 %LLVM_GIT%/clang.git %LLVM_ROOT%\llvm\tools\clang -b release_70
  # (sigiesec) instead of cloning clang-tools-extra from upstream, use the checkout out one, and place it at the correct location
  # - git clone --depth=1 %LLVM_GIT%/clang-tools-extra.git %LLVM_ROOT%\llvm\tools\clang\tools\extra -b release_70
  - set MOVED_BUILD_FOLDER=%LLVM_ROOT%\llvm\tools\clang\tools\extra
  - move %APPVEYOR_BUILD_FOLDER% %MOVED_BUILD_FOLDER%
  # TODO (sigiesec) do we need lld?
  #- git clone --depth=1 %LLVM_GIT%/lld.git %LLVM_ROOT%\tools\lld

  #############################################################################
  # Setup MSVC Environment
  #############################################################################
  - call "%MSVC_SETUP_PATH%" %MSVC_SETUP_ARG%

build_script:
  - set LLVM_CMAKE_BUILD_ROOT=C:\projects\build-llvm
  - if not exist "%LLVM_CMAKE_BUILD_ROOT%" md %LLVM_CMAKE_BUILD_ROOT%
  - cd %LLVM_CMAKE_BUILD_ROOT%
  - echo %configuration%

  #############################################################################
  # Configuration Step
  # ---------------------------------------------------------------------------
  # Optional CMake options:
  #   -DLLVM_ENABLE_ASSERTIONS=ON
  #     Turn on assertions within LLVM even in release mode. Very helpful
  #     for catching API misuses and problems.
  #   -DCMAKE_BUILD_TYPE=RELWITHDEBINFO
  #      Use this instead of "RELEASE" if you want the created libraries to
  #      have debug information.
  #############################################################################
  - if not exist "%LLVM_CMAKE_BUILD_ROOT%\CMakeCache.txt" cmake -G Ninja
    "-DCMAKE_INSTALL_PREFIX=C:\Libraries"
    "-DCMAKE_BUILD_TYPE=%configuration%"
    "-DLLVM_INSTALL_UTILS=ON"
    %CMAKE_EXTRA_OPTIONS%
    %LLVM_ROOT%\llvm
  - set APPVEYOR_SAVE_CACHE_ON_ERROR=true

  #############################################################################
  # Build Step
  # TODO (sigiesec) when timeout hits, schedule a rebuild: https://www.appveyor.com/docs/api/projects-builds/#start-build-of-specific-branch-commit
  - C:\cygwin64\bin\bash -e -l %MOVED_BUILD_FOLDER%\appveyor\build.sh

on_success:
  - appveyor PushArtifact bin\clang-tidy.exe
  
on_failure:
  - appveyor PushArtifact CMakeFiles/CMakeOutput.log
  - appveyor PushArtifact CMakeFiles/CMakeError.log

